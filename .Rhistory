# building weight matrix by KNN
stations <- data.frame(cbind(df$long, df$lat))
colnames(stations) <- c('long','lat')
coords <- SpatialPoints(stations)
proj4string(coords) <- CRS("+proj=longlat +datum=WGS84")
coords <- spTransform(coords, CRS("+proj=utm +zone=12 +datum=WGS84"))
coords@coords
View(coords1)
# ===============================================================
# building weight matrix by KNN
stations <- data.frame(cbind(as.character(df$long), as.character(df$lat)))
colnames(stations) <- c('long','lat')
coords <- SpatialPoints(stations)
proj4string(coords) <- CRS("+proj=longlat +datum=WGS84")
# ===============================================================
# building weight matrix by KNN
stations <- data.frame(cbind(df$long, df$lat))
colnames(stations) <- c('long','lat')
coords <- SpatialPoints(stations)
proj4string(as.character(coords)) <- CRS("+proj=longlat +datum=WGS84")
proj4string(coords) <- CRS("+proj=longlat +datum=WGS84")
coords <- spTransform(coords, CRS("+proj=utm +zone=11 +datum=WGS84"))
coords@coords
View(df)
# ===============================================================
# building weight matrix by KNN
stations <- data.frame(cbind(df$lat, df$long))
colnames(stations) <- c('lat','long')
coords <- SpatialPoints(stations)
proj4string(coords) <- CRS("+proj=longlat +datum=WGS84")
coords <- spTransform(coords, CRS("+proj=utm +zone=11 +datum=WGS84"))
df <- read.csv('Data/C_Utah_Traffic.csv')
# ===============================================================
# building weight matrix by KNN
stations <- data.frame(cbind(df$lat, df$long))
colnames(stations) <- c('lat','long')
coords <- SpatialPoints(stations)
proj4string(coords) <- CRS("+proj=longlat +datum=WGS84")
# ===============================================================
# building weight matrix by KNN
stations <- data.frame(cbind(df$long, df$lat))
colnames(stations) <- c('long','lat')
coords <- SpatialPoints(stations)
proj4string(coords) <- CRS("+proj=longlat +datum=WGS84")
coords <- spTransform(coords, CRS("+proj=utm +zone=12T +datum=WGS84"))
coords@coords
class(coords@coords)
coords <- spTransform(coords, CRS("+proj=utm +zone=12 +datum=WGS84"))
coords@coords
colnames(stations) <- c('easting','northing')
coords <- SpatialPoints(stations)
proj4string(coords) <- CRS("+proj=longlat +datum=WGS84")
coords <- spTransform(coords, CRS("+proj=utm +zone=12 +datum=WGS84"))
coords <- spTransform(coords, CRS("+proj=utm +zone=12 +datum=WGS84"))
coords <- spTransform(coords, CRS("+proj=utm +zone=12 +datum=WGS84"))
coords <- spTransform(coords, CRS("+proj=utm +zone=12 +datum=WGS84"))
coords <- spTransform(coords, CRS("+proj=utm +zone=12 +datum=WGS84"))
coords <- spTransform(coords, CRS("+proj=utm +zone=12 +datum=WGS84"))
coords <- spTransform(coords, CRS("+proj=utm +zone=12 +datum=WGS84"))
stations <- data.frame(cbind(df$long, df$lat))
colnames(stations) <- c('easting','northing')
coords <- SpatialPoints(stations)
proj4string(coords) <- CRS("+proj=longlat +datum=WGS84")
coords <- spTransform(coords, CRS("+proj=utm +zone=12 +datum=WGS84"))
coords@coords
coords@coords['easting']
coords@coords[['easting']]
class(coords@coords)
coords <- data.frame(coords@coords)
View(coords)
coords <- cbind(coords$northing, coords$easting)
coords <- as.matrix(coords)
class(coords)
View(coords)
# assuming that every node connects to 4 roads
k <- knn2nb(knearneigh(coords, k=4))
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
source("Packages/starima_package.R")
df <- read.csv('Data/C_Utah_Traffic.csv')
# ===============================================================
# building weight matrix by KNN
stations <- data.frame(cbind(df$long, df$lat))
colnames(stations) <- c('easting','northing')
coords <- SpatialPoints(stations)
proj4string(coords) <- CRS("+proj=longlat +datum=WGS84")
coords <- spTransform(coords, CRS("+proj=utm +zone=12 +datum=WGS84"))
coords <- data.frame(coords@coords)
coords <- cbind(coords$northing, coords$easting)
duplicates <- duplicated(coords)
coords[duplicates,]
# ===============================================================
# building weight matrix by KNN
stations <- data.frame(cbind(df$long, df$lat))
colnames(stations) <- c('easting','northing')
coords <- SpatialPoints(stations)
duplicates <- duplicated(stations$easting)
stations[duplicates,]
View(stations)
# =======================================================
# load data
# =======================================================
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
df <- read.csv('Data/Utah_Traffic.csv')
df_meta <- read.csv('Data/Utah_Traffic_Meta.csv')
# setting the first col(time) as indexes
row.names(df) <- df$X
df$X <- NULL
names(df) <- substring(names(df),3)
# transpose df and make it into matrix
traf_matrix <- t(df)
# transpose df and make it into matrix
traf_matrix <- t(df)
# transpose df and make it into matrix
traf_matrix <- t(df)
# =======================================================
# load data
# =======================================================
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
df <- read.csv('Data/Utah_Traffic.csv')
df_meta <- read.csv('Data/Utah_Traffic_Meta.csv')
# setting the first col(time) as indexes
row.names(df) <- df$X
df$X <- NULL
names(df) <- substring(names(df),3)
# transpose df and make it into matrix
traf_matrix <- t(df)
# replace the NaN data with mean in the location )
for (i in 1:nrow(traf_matrix)) {
traf_matrix[i,is.na(traf_matrix[i,])] <- mean(traf_matrix[i,!is.na(traf_matrix[i,])])
}
View(traf_matrix)
View(df)
View(traf_matrix)
# =======================================================
# load data
# =======================================================
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
df <- read.csv('Data/Utah_Traffic.csv')
df_meta <- read.csv('Data/Utah_Traffic_Meta.csv')
# setting the first col(time) as indexes
row.names(df) <- df$X
df$X <- NULL
names(df) <- substring(names(df),3)
# transpose df and make it into matrix
traf_matrix <- t(df)
# replace the NaN data with mean in the location )
View(traf_matrix)
for (i in 1:nrow(traf_matrix)) {
traf_matrix[i,is.na(traf_matrix[i,])] <- mean(traf_matrix[i,!is.na(traf_matrix[i,])])
}
View(traf_matrix)
View(df)
View(traf_matrix)
# =======================================================
# load data
# =======================================================
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
df <- read.csv('Data/Utah_Traffic.csv')
df_meta <- read.csv('Data/Utah_Traffic_Meta.csv')
# setting the first col(time) as indexes
row.names(df) <- df$X
df$X <- NULL
names(df) <- substring(names(df),3)
# transpose df and make it into matrix
traf_matrix <- t(df)
# replace the NaN data with mean in the location )
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
df <- read.csv('Data/Utah_Traffic.csv')
df_meta <- read.csv('Data/Utah_Traffic_Meta.csv')
# setting the first col(time) as indexes
row.names(df) <- df$X
df$X <- NULL
num_cols_na <- sum(colSums(is.na(df)) > 0)
num_cols_na
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
df <- read.csv('Data/Utah_Traffic.csv')
df_meta <- read.csv('Data/Utah_Traffic_Meta.csv')
# setting the first col(time) as indexes
row.names(df) <- df$X
df$X <- NULL
df_no_na <- subset(df, select = which(colSums(is.na(df)) == 0))
View(df_no_na)
write.csv(df_no_na, file='Data/N_Utah_Traffic.csv')
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
df <- read.csv('Data/N_Utah_Traffic.csv')
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
df <- read.csv('Data/N_Utah_Traffic.csv')
df_meta <- read.csv('Data/Utah_Traffic_Meta.csv')
# setting the first col(time) as indexes
row.names(df) <- df$X
df$X <- NULL
names(df) <- substring(names(df),3)
# transpose df and make it into matrix
traf_matrix <- t(df)
# adding lat and long to traf_matrix
station <- as.numeric(rownames(traf_matrix))
long <- df_meta$longitude[station == df_meta$station_id]
lat <- df_meta$latitude[station == df_meta$station_id]
route <- df_meta$route[station == df_meta$station_id]
traf_matrix <- cbind(long, lat, route, traf_matrix)
# =======================================================
# save the cleaned data
# =======================================================
write.csv(traf_matrix, file='Data/C_Utah_Traffic.csv')
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
source("Packages/starima_package.R")
df <- read.csv('Data/C_Utah_Traffic.csv')
View(df)
# =======================================================
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
df <- read.csv('Data/N_Utah_Traffic.csv')
df_meta <- read.csv('Data/Utah_Traffic_Meta.csv')
# setting the first col(time) as indexes
row.names(df) <- df$X
df$X <- NULL
names(df) <- substring(names(df),3)
# transpose df and make it into matrix
traf_matrix <- t(df)
View(traf_matrix)
View(df)
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
df <- read.csv('Data/Utah_Traffic.csv')
df_meta <- read.csv('Data/Utah_Traffic_Meta.csv')
View(df)
# load data
# =======================================================
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
df <- read.csv('Data/Utah_Traffic.csv')
df_meta <- read.csv('Data/Utah_Traffic_Meta.csv')
View(df)
# setting the first col(time) as indexes
row.names(df) <- df$X
df$X <- NULL
View(df)
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
df <- read.csv('Data/Utah_Traffic.csv')
df_meta <- read.csv('Data/Utah_Traffic_Meta.csv')
# setting the first col(time) as indexes
# setting the first col(time) as indexes
df <- subset(df, select = which(colSums(is.na(df)) == 0))
View(df)
row.names(df) <- df$X
df$X <- NULL
View(df)
write.csv(df_no_na, file='Data/N_Utah_Traffic.csv')
df <- read.csv('Data/N_Utah_Traffic.csv')
df_meta <- read.csv('Data/Utah_Traffic_Meta.csv')
View(df)
names(df) <- substring(names(df),3)
View(df)
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
df <- read.csv('Data/N_Utah_Traffic.csv')
df_meta <- read.csv('Data/Utah_Traffic_Meta.csv')
names(df)
df$X <- NULL
names(df) <- substring(names(df),1)
View(df)
names(df) <- substring(names(df),2)
# transpose df and make it into matrix
traf_matrix <- t(df)
View(traf_matrix)
View(df)
View(df)
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
df <- read.csv('Data/N_Utah_Traffic.csv')
View(df)
# setting the first col(time) as indexes
row.names(df) <- df$X
df$X <- NULL
names(df) <- substring(names(df),2)
# transpose df and make it into matrix
traf_matrix <- t(df)
View(traf_matrix)
# adding lat and long to traf_matrix
station <- as.numeric(rownames(traf_matrix))
long <- df_meta$longitude[station == df_meta$station_id]
lat <- df_meta$latitude[station == df_meta$station_id]
route <- df_meta$route[station == df_meta$station_id]
traf_matrix <- cbind(long, lat, route, traf_matrix)
# =======================================================
# save the cleaned data
# =======================================================
write.csv(traf_matrix, file='Data/C_Utah_Traffic.csv')
View(traf_matrix)
# adding lat and long to traf_matrix
station <- as.numeric(rownames(traf_matrix))
long <- df_meta$longitude[station == df_meta$station_id]
station
df_meta$station_id
df_meta1 <- df_meta[station %in% df_meta$station_id]
station <- as.numeric(rownames(traf_matrix))
df_meta1 <- df_meta[station %in% df_meta$station_id]
df_meta1 <- df_meta[df_meta$station_id %in% station]
df_meta1 <- df_meta[df_meta$station_id %in% station, ]
View(df_meta1)
df_meta1$X <- NULL
View(df_meta1)
write.csv(df_meta1, file='Data/N_Utah_Traffic_Meta.csv')
# =======================================================
# load data
# =======================================================
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
df <- read.csv('Data/N_Utah_Traffic.csv')
df_meta <- read.csv('Data/N_Utah_Traffic_Meta.csv')
# setting the first col(time) as indexes
row.names(df) <- df$X
df$X <- NULL
names(df) <- substring(names(df),2)
# transpose df and make it into matrix
traf_matrix <- t(df)
View(traf_matrix)
# adding lat and long to traf_matrix
station <- as.numeric(rownames(traf_matrix))
long <- df_meta$longitude[station == df_meta$station_id]
lat <- df_meta$latitude[station == df_meta$station_id]
route <- df_meta$route[station == df_meta$station_id]
traf_matrix <- cbind(long, lat, route, traf_matrix)
# =======================================================
# save the cleaned data
# =======================================================
write.csv(traf_matrix, file='Data/C_Utah_Traffic.csv')
View(traf_matrix)
# ===============================================================
# STARIMA
# ===============================================================
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
source("Packages/starima_package.R")
df <- read.csv('Data/C_Utah_Traffic.csv')
# https://spatialanalysis.github.io/lab_tutorials/Distance_Based_Spatial_Weights.html#distance-band-weights
library(tmap)
library(sf)
library(spdep)
library(ggplot2)
library(deldir)
library(sp)
library(purrr)
library(rgdal)
library(maptools)
library(knitr)
# ===============================================================
# building weight matrix by KNN
stations <- data.frame(cbind(df$long, df$lat))
colnames(stations) <- c('easting','northing')
coords <- SpatialPoints(stations)
duplicates <- duplicated(stations$easting)
stations[duplicates,]
proj4string(coords) <- CRS("+proj=longlat +datum=WGS84")
coords <- spTransform(coords, CRS("+proj=utm +zone=12 +datum=WGS84"))
coords <- data.frame(coords@coords)
coords <- cbind(coords$northing, coords$easting)
duplicates <- duplicated(coords)
duplicates <- duplicated(coords)
coords[duplicates,]
coords <- as.matrix(coords)
class(coords)
# assuming that every node connects to 4 roads
k <- knn2nb(knearneigh(coords, k=4))
# convert nb to matrix
k_mat <- nb2mat(k)
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
source("Packages/starima_package.R")
df <- read.table('Data/C_Utah_Traffic.csv')
df <- read.table('Data/C_Utah_Traffic.csv'header = TRUE, sep = ",")
df <- read.table('Data/C_Utah_Traffic.csv', header = TRUE, sep = ",")
View(df)
# ===============================================================
# building weight matrix by KNN
stations <- data.frame(cbind(df$long, df$lat))
colnames(stations) <- c('easting','northing')
coords <- SpatialPoints(stations)
duplicates <- duplicated(stations$easting)
stations[duplicates,]
# https://spatialanalysis.github.io/lab_tutorials/Distance_Based_Spatial_Weights.html#distance-band-weights
library(tmap)
library(sf)
library(spdep)
library(ggplot2)
library(deldir)
library(sp)
library(purrr)
library(rgdal)
library(maptools)
library(knitr)
# ===============================================================
# STARIMA
# ===============================================================
setwd('/Users/apple/Desktop/CEGE0042_R/CEGE0042_STDM_PROJECT')
source("Packages/starima_package.R")
df <- read.table('Data/C_Utah_Traffic.csv', header = TRUE, sep = ",")
# ===============================================================
# building weight matrix by KNN
stations <- data.frame(cbind(df$long, df$lat))
colnames(stations) <- c('easting','northing')
coords <- SpatialPoints(stations)
duplicates <- duplicated(stations$easting)
stations[duplicates,]
proj4string(coords) <- CRS("+proj=longlat +datum=WGS84")
coords <- spTransform(coords, CRS("+proj=utm +zone=12 +datum=WGS84"))
coords <- data.frame(coords@coords)
coords <- cbind(coords$northing, coords$easting)
duplicates <- duplicated(coords)
coords[duplicates,]
coords <- as.matrix(coords)
class(coords)
# assuming that every node connects to 4 roads
k <- knn2nb(knearneigh(coords, k=4))
# convert nb to matrix
k_mat <- nb2mat(k)
write.csv(k_df, file='Data/W_Utah_Traffic.csv')
write.csv(k_mat, file='Data/W_Utah_Traffic.csv')
View(k_mat)
# ===============================================================
# load weight matrix
W <- read.table(file='Data/W_Utah_Traffic.csv',header=TRUE, sep=',')
W <- as.matrix(W)
View(W)
# ===============================================================
# load weight matrix
W <- read.table(file='Data/W_Utah_Traffic.csv',header=TRUE, sep=',')
W$X = NULL
W <- as.matrix(W)
View(W)
# convert data into matrix form
traf.mat <- as.matrix(df[,5:ncol(df)])
View(traf.mat)
stacf(traf.mat, k_mat, 48)
stacf(traf.mat, W, 48)
stacf(traf.mat, W, 24)
View(traf.mat)
# convert data into matrix form
traf.mat <- t(as.matrix(df[,5:ncol(df)]))
stacf(traf.mat, W, 24)
stacf(traf.mat, W, 72)
stacf(traf.mat, W, 144)
stacf(traf.mat, W, 72)
# first difference
traf.mat.diff1 <- diff(uk_temp.mat, lag=24, differences=1)
# first difference
traf.mat.diff1 <- diff(traf.mat, lag=24, differences=1)
stpacf(traf.mat.diff, W, 72)
stpacf(traf.mat.diff1, W, 72)
# first difference
traf.mat.diff1 <- diff(traf.mat, lag=24, differences=1)
stpacf(traf.mat.diff1, W, 72)
# convert data into matrix form
traf.mat <- t(as.matrix(df[,5:ncol(df)]))
stacf(traf.mat, W, 48)
# first difference
traf.mat.diff1 <- diff(traf.mat, lag=24, differences=1)
stpacf(traf.mat.diff1, W, 72)
stpacf(traf.mat.diff1, W, 48)
# parameter esitimation
n_train = round(0.7*ncol(traf.mat))
n_train
# parameter esitimation
n_train = round(0.7*nrow(traf.mat))
n_train
print(paste0('the length of training data is', n_train)
print(paste0('the length of training data is', n_train))
print(paste0('the length of training data is', n_train))
print(paste0('the length of training data is ', n_train))
print(paste0('=== The length of training data is ', n_train, " ==="))
W_fit<-list(w1=W)
View(W_fit)
stacf(traf.mat.diff1, W, 48)
stpacf(traf.mat.diff1, W, 48)
fit.star <- starima_fit(uk_temp.mat[1:n_train,],W_fit,p=3,d=24,q=2)
fit.star <- starima_fit(traf.mat[1:n_train,],W_fit,p=3,d=24,q=2)
# Diagnostic Checking
stacf(fit.star$RES,W,48)
hist(fit.star$RES[,6])
hist(fit.star$RES[,10])
hist(fit.star$RES[,10])
# prediction with the STARIMA model
pre.star <- starima_pre(traf.mat[n_train+1:nrow(traf.mat),], model=fit.star)
n_train+1:nrow(traf.mat)
n_train+1
nrow(traf.mat)
# prediction with the STARIMA model
pre.star <- starima_pre(traf.mat[n_train+1:nrow(traf.mat),], model=fit.star)
traf.mat[n_train+1:nrow(traf.mat),]
# prediction with the STARIMA model
pre.star <- starima_pre(traf.mat[n_train:nrow(traf.mat),], model=fit.star)
# prediction with the STARIMA model
pre.star <- starima_pre(traf.mat[(n_train+1):nrow(traf.mat),], model=fit.star)
matplot(1:144, cbind(traf.mat[n_train:nrow(traf.mat),1], pre.star$PRE[,1]),type='l')
matplot(1:144, cbind(traf.mat[(n_train+1):nrow(traf.mat),1], pre.star$PRE[,1]),type='l')
matplot(1:48, cbind(traf.mat[(n_train+1):nrow(traf.mat),1], pre.star$PRE[,1]),type='l')
matplot(1:48, cbind(df[(n_train+1):nrow(traf.mat),1], pre.star$PRE[,1]),type='l')
matplot(1:48, cbind(traf[(n_train+1):nrow(traf.mat),1], pre.star$PRE[,1]),type='l')
matplot(1:48, cbind(df[(n_train+1):nrow(traf.mat),1], pre.star$PRE[,1]),type='l')
pre.star$PRE[,1])
pre.star$PRE[,1]
df = t(df)
View(df)
df <- read.table('Data/C_Utah_Traffic.csv', header = TRUE, sep = ",")
df1 = data.frame(t(df[,5:ncol(df)]))
View(df1)
matplot(1:48, cbind(df1[(n_train+1):nrow(traf.mat),1], pre.star$PRE[,1]),type='l')
a <- df1[(n_train+1):nrow(traf.mat),1]
b <- pre.star$PRE[,1]
c <- traf.mat[(n_train+1):nrow(traf.mat)
c <- traf.mat[(n_train+1):nrow(traf.mat)]
c <- traf.mat[(n_train+1):nrow(traf.mat)]
# prediction with the STARIMA model
pre.star <- starima_pre(traf.mat[(n_train-24-5+1):nrow(traf.mat),], model=fit.star)
df1 = data.frame(t(df[,5:ncol(df)]))
matplot(1:48, cbind(df1[(n_train+1):nrow(traf.mat),1], pre.star$PRE[,1]),type='l')
matplot(1:48, cbind(df1[(n_train+1):nrow(traf.mat),1], pre.star$PRE[,1]),type='l')
a <- df1[(n_train+1):nrow(traf.mat),1]
b <- pre.star$PRE[,1]
matplot(1:223, cbind(df1[(n_train+1):nrow(traf.mat),1], pre.star$PRE[,1]),type='l')
